{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/mock-heroes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","heroService","getHeroes","subscribe","heroes","slice","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","HeroService","messageService","httpClient","HEROES","url","headers","Headers","options","header","withCredentials","pipe","_","log","handleError","operation","result","error","console","message","add","providedIn","HeroesComponent","MessageService","messages","push","MessagesComponent","name","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/dashboard', pathMatch:'full'},\n  {path: 'heroes', component: HeroesComponent},\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'detail/:id', component: HeroDetailComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<div>\n  <header>\n    <h1>{{title}}</h1>\n    <nav>\n      <a routerLink=\"/heroes\">Heroes</a>\n      <a routerLink=\"/dashboard\">Home</a>\n    </nav>\n  </header>\n  <main>\n    <router-outlet></router-outlet>\n   <aside><app-messages></app-messages></aside>\n  </main>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  heroes: Hero[];\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit(): void {\n    // this.getHeroes();\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(\n      heroes => this.heroes = heroes.slice(1, 5)\n    );\n  }\n\n}\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n  <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n      routerLink=\"/detail/{{hero.id}}\">\n    <div class=\"module hero\">\n      <h4>{{hero.name}}</h4>\n    </div>\n  </a>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Hero } from '../hero';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.css']\n})\nexport class HeroDetailComponent implements OnInit {\n  hero: Hero;\n  \n  constructor(private route: ActivatedRoute,\n              private heroService: HeroService,\n              private location: Location) { }\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id).subscribe(\n      hero => this.hero = hero\n    )\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div *ngIf=\"hero\">\n  <h2>{{hero.name | uppercase }} Heroes Details</h2>\n\n  <label >name:\n    <input [(ngModel)]=\"hero.name\" placeholder = \"name\"/>\n  </label>\n  <button (click)=\"goBack()\">go Back</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  HEROES: Hero[] = HEROES;\n  url = 'http://localhost/Tour';\n  headers = new Headers({'Content-Type': 'application/json'});\n  options = { header: this.headers, withCredentials: false };\n\n  constructor(private messageService: MessageService, private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.getHeroes();\n  }\n\n  // getHeroes(): Observable<Hero[]> {\n  //   // TODO: send the messae _after_ fetching the heroes.\n  //   this.messageService.add('HeroService: fetched heroes');\n\n  //   return of(HEROES);\n  // }\n\n  getHeroes(): Observable<Hero[]> {\n    // TODO: send the messae _after_ fetching the heroes.\n    return this.httpClient.get<Hero[]>(this.url, this.options);\n  }\n\n  getHero(id: number): Observable<Hero>{\n    const url = `${this.url}/${id}`;\n  return this.httpClient.get<Hero>(url).pipe(\n    tap(_ => this.log(`fetched hero id=${id}`)),\n    catchError(this.handleError<Hero>(`getHero id=${id}`))\n  );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n  this.messageService.add(`HeroService: ${message}`);\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HEROES } from '../mock-heroes';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\nimport { MessageService } from '../message.service';\n\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n\n  heroes: Hero[];\n\n  constructor(private heroService: HeroService){}\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  onSelect(hero: Hero): void {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(\n                                    heroes => this.heroes = heroes\n                                  );\n  }\n}\n","<div>\n    <ul class = \"heroes\">\n      <li *ngFor=\"let hero of heroes\">\n        <a routerLink=\"/detail/{{hero.id}}\">\n          <span class = \"badge\">{{hero.id}} </span>{{hero.name}}\n        </a>\n      </li>\n    </ul>\n</div>\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  \n  messages: string[] = [];\n  constructor() { }\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor=\"let message of messageService.messages\">{{message}}</div>\n</div>\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Dr Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}